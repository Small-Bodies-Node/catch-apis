/*
 *  This groovy script will be triggered by the Generic Webhook Trigger Plugin
 *  when a github push event is detected direct to the master branch and we want
 *  the production API on Musforti to automatically update to reflect those changes
 *  Job Triggered: 'jenkins-2-deploy-stage'
 */

pipeline {

    agent any


    triggers {
        GenericTrigger(
            genericVariables: [
                // [key: 'ref', value: '$.ref', regexpFilter: 'refs/heads/master']
                // [key: 'ref', value: '$.ref', regexpFilter: 'XXX']
                [key: 'ref', value: '$.ref'],
                [key: 'everything', value: '$']

            ],

            // The token is required both in this script AND in the Jenkins pipeline  GUI
            token: env.GENERIC_WEBHOOK_TOKEN_TEST_DEPLOY_MASTER,  //Defined as global var

            causeString: 'Triggered on $ref equalling "refs/heads/master"',
            printContributedVariables: true,
            printPostContent: !true,
            silentResponse: false,
            regexpFilterText: '$ref',
            regexpFilterExpression: 'refs/heads/master'
        )
    }

    stages {
        stage('Build') {
            steps {
                echo 'START BUILD ...'
                // checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/dwd-umd/catch-apis.git']]])
                sh '''
                    cat .jenkins-testing
                '''
                echo "... END BUILD"
            }
        }
        stage('Test') {
            steps {
                echo 'START TESTING ...'
                sh '''
                    # python3 -m venv .venv
                    # source .venv/bin/activate
                    # pip install pytest requests
                    # sh _run_tests                # Add argument 'fail' in order test failing
                '''
                // junit 'pytest_unit.xml'
                echo "... END TESTING"
            }
        }
        stage('Deploy') {
            steps {
                echo "START DEPLOYING ..."
                sh '''
                    cd $CATCH_STAGE_APIS_PATH       # Global env var (go to 'Manage Jenkins > Configure System > Global properties' and add vars)
                    pwd
                    git stash
                    git pull origin master
                    . $CATCH_STAGE_APIS_PATH/_initial_setup jenkins

                    # Must set this env for daemon to survive pipeline's termination
                    JENKINS_NODE_COOKIE=dontKillMe sh ./_gunicorn_manager restart
                    JENKINS_NODE_COOKIE=dontKillMe sh ./_worker_manager restart

                    #touch "hello-`date +%Y-%m-%d`.txt"
                    #touch "hello-`date`.txt"

                    sleep 5
                    # Try pinging url for catch-stage
                    curl localhost:5001/catch/demo

                    echo "... END DEPLOYING"
                '''
            }
        }
    }
}